var async = require('async');
var dc = require('mcp_db').dc;
var esut = require('easy_util');
var log = esut.log;
var digestUtil = esut.digestUtil;

var cons = require('mcp_constants');
var userType = cons.userType;

var config = require('mcp_config');
var ec = config.ec;
var prop = config.prop;

var service = require('mcp_service');
var digestService = service.digestService;
var kvService=service.kvService;

var LoanControl = function () {
    var self = this;
    self.cmd = {'LC01': 1};
    self.cmdArray = [{},
        {id: 1, code: 'LC01', fromType: prop.digestFromType.DB, des: "管理员登陆"}
    ];
};

LoanControl.prototype.handle = function (headNode, bodyStr, userCb) {
    var self = this;
    async.waterfall([
        //是否是支持的cmd
        function (cb) {
            var cmd = self.cmd[headNode.cmd];
            if (cmd == undefined) {
                cb(ec.E2010);
            }
            else {
                cb(null);
            }
        },
        //校验头的用户类型是否合法
        function (cb) {
            var userTypeId = userType[headNode.userType];
            if (userTypeId == undefined) {
                cb(ec.E9030);
            }
            else {
                cb(null, userTypeId);
            }
        },
        //获得密钥
        function (userTypeId, cb) {
            var cmd = self.cmdArray[self.cmd[headNode.cmd]];
            digestService.getKey({fromType: cmd.fromType, userId: headNode.userId, userType: userTypeId},
                function (err, key) {
                    cb(err, key);
                });
        },
        //先解密
        function (key, cb) {
            var decodedBodyStr = digestUtil.check(headNode, key, bodyStr);
            if (decodedBodyStr == null) {
                cb(ec.E9020);
                return;
            }
            var bodyNode;
            try {
                bodyNode = JSON.parse(decodedBodyStr);
                headNode.key = key;
            }
            catch (err) {
                cb(ec.E0005);
                return;
            }
            cb(null, bodyNode);

        },
        //check the param
        function (bodyNode, cb) {
            var method = 'check' + headNode.cmd;
            self[method](null, headNode, bodyNode, function (err) {
                cb(err, bodyNode);
            });
        },
        //业务处理
        function (bodyNode, cb) {
            var cmd = 'handle' + headNode.cmd;
            self[cmd](null, headNode, bodyNode, cb);
        }
    ], function (err, bodyNode) {
        userCb(err, bodyNode);
    });
};


/**
 * @param user
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  LC01 创建项目
 */

LoanControl.prototype.checkLC01 = function (user, headNode, bodyNode, cb) {
    cb(null);
};


LoanControl.prototype.handleLC01 = function (user, headNode, bodyNode, cb) {
    var loan = dc.main.get('loan');
    async.waterfall([
        //生成id号
        function (cb) {
            kvService.getLoanId(function(err, data){
                cb(err, data);
            });
        },
        //插入数据
        function(data,cb){
            bodyNode.status = 'waiting_verify';
            bodyNode.id = data.value;
            var start = new Date().getTime();
            loan.save(bodyNode, [], function (err) {
                var end = new Date().getTime();
                log.info(headNode.cmd + ":" + headNode.userId + ":" + headNode.messageid + ",用时:" + (end - start) + "ms");
                if(err){
                    cb(ec.E9050);
                }else{
                    cb(null);
                }
            });
        }
    ], function (err) {
        cb(err);
    });


 //   cb(null);



};


var loanControl = new LoanControl();
module.exports = loanControl;