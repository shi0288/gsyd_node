var async = require('async');
var dc = require('mcp_db').dc;
var esut = require('easy_util');
var log = esut.log;
var digestUtil = esut.digestUtil;
var dateUtil = esut.dateUtil;

var cons = require('mcp_constants');
var userType = cons.userType;

var config = require('mcp_config');
var ec = config.ec;
var prop = config.prop;

var service = require('mcp_service');
var digestService = service.digestService;
var checkService = service.checkService;

var CommonControl = function () {
};

CommonControl.prototype.handle = function (headNode, bodyStr, userCb) {
    var self = this;
    async.waterfall([
        //是否是支持的cmd
        function (cb) {
            if (typeof self['handle' + headNode.cmd] === 'function') {
                cb(null);
            } else {
                cb(ec.E2010);
            }
        },
        //校验头的用户类型是否合法
        function (cb) {
            var userTypeId = userType[headNode.userType];
            if (userTypeId == undefined) {
                cb(ec.E9030);
            }
            else {
                cb(null, userTypeId);
            }
        },
        //获得密钥
        function (userTypeId, cb) {
            digestService.getKey({fromType: prop.digestFromType.DB, userId: headNode.userId, userType: userTypeId},
                function (err, key) {
                    cb(err, key);
                });
        },
        //先解密
        function (key, cb) {
            var decodedBodyStr = digestUtil.check(headNode, key, bodyStr);
            if (decodedBodyStr == null) {
                cb(ec.E9020);
                return;
            }
            var bodyNode;
            try {
                bodyNode = JSON.parse(decodedBodyStr);
                headNode.key = key;
            }
            catch (err) {
                cb(ec.E0005);
                return;
            }
            cb(null, bodyNode);

        },
        //check the param
        function (bodyNode, cb) {
            var method = 'check' + headNode.cmd;
            self[method](headNode, bodyNode, function (err) {
                cb(err, bodyNode);
            });
        },
        //业务处理
        function (bodyNode, cb) {
            var cmd = 'handle' + headNode.cmd;
            self[cmd](headNode, bodyNode, cb);
        }
    ], function (err, bodyNode) {
        userCb(err, bodyNode);
    });
};


/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  CM01 记录日志
 */

CommonControl.prototype.checkCM01 = function (headNode, bodyNode, cb) {
    cb(null);
};


CommonControl.prototype.handleCM01 = function (headNode, bodyNode, cb) {
    var cond = {};
    cond.id = digestUtil.createUUID();
    cond.user_id = bodyNode.user_id;
    cond.des = bodyNode.des;
    cond.create_time = dateUtil.getCurTime();
    var managelog = dc.main.get('managelog');
    managelog.save(cond, [], function (err, data) {
        if (err) {
            log.error(headNode.messageid + '日志记录出错');
            cb(ec.E9999);
        } else {
            cb(null);
        }
    });
};


/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  CM02 查询项目
 */

CommonControl.prototype.checkCM02 = function (headNode, bodyNode, cb) {
    //检查表中是否有这个字段
    var loan = dc.main.get(bodyNode.table);
    async.waterfall([
        //第一步检查是否有这张表
        function(checkCb){
            if(loan==undefined){
                checkCb(ec.E3030);
            }else{
                checkCb(null);
            }
        },
        //第二步检查是否有查询的字段
        function(checkCb){
            checkService.checkTableColumn(loan,bodyNode.files,function(err){
                checkCb(err);
            });
        }
    ],function(err){
        cb(err);
    });
};

CommonControl.prototype.handleCM02 = function (headNode, bodyNode, cb) {
    var loan = dc.main.get(bodyNode.table);
    loan.findOne({id: bodyNode.id}, bodyNode.files, [], function (err, data) {
        if (data) {
            var bodyNodeBack = {};
            bodyNodeBack.loan = data;
            cb(err, bodyNodeBack);
        }
        else {
            cb(ec.E3000);
        }
    });
};



/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  CM03 查询项目列表
 */

CommonControl.prototype.checkCM03 = function (headNode, bodyNode, cb) {
    //检查表中是否有这个字段
    var loan = dc.main.get(bodyNode.table);
    async.waterfall([
        //第一步检查是否有这张表
        function(checkCb){
            if(loan==undefined){
                checkCb(ec.E3030);
            }else{
                checkCb(null);
            }
        },
        //第二步检查是否有查询的字段
        function(checkCb){
            checkService.checkTableColumn(loan,bodyNode.files,function(err){
                checkCb(err);
            });
        },
        //第三步检查是否有条件字段
        function(checkCb){
            checkService.checkTableColumn(loan,bodyNode.cond,function(err){
                checkCb(err);
            });
        },
        //第四步检查是否有排序的字段
        function(checkCb){
            checkService.checkTableColumn(loan,bodyNode.sort,function(err){
                checkCb(err);
            });
        }
    ],function(err){
        cb(err);
    });
};

CommonControl.prototype.handleCM03 = function (headNode, bodyNode, cb) {
    var loan = dc.main.get(bodyNode.table);
    var cursor = loan.find(bodyNode.cond, bodyNode.files, []).sort(bodyNode.sort).limit(bodyNode.skip, bodyNode.limit);
    cursor.dateToString();
    cursor.toArray(function (err, data) {
        if (err) {
            log.error("获取项目列表出错");
            cb(ec.E9999);
            return;
        }
        var backBodyNode = {};
        backBodyNode.rst = data;
        backBodyNode.count = cursor.count(function (err, count) {
            backBodyNode.count = count;
            cb(null, backBodyNode);
        });
    });
};


/**
 * @param headNode
 * @param bodyNode
 * @param cb
 * @Description  CM04 编辑更新
 */

CommonControl.prototype.checkCM04 = function (headNode, bodyNode, cb) {
    cb(null);
};

CommonControl.prototype.handleCM04 = function (headNode, bodyNode, cb) {
    var loan = dc.main.get(bodyNode.table);
    loan.update({id: bodyNode.id}, {$set: {status: loanStatus.cancel}}, [], function (err, data) {
        if (err) {
            log.error(headNode.messageid + '更新项目状态出错');
            cb(ec.E9999);
        } else {
            cb(null);
        }
    });
};


var commonControl = new CommonControl();
module.exports = commonControl;