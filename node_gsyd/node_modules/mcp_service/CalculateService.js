/**
 * Created by shiqm on 16-4-21.
 */
'use strict';

var cons = require('mcp_constants');
var calCons = cons.calculateCons;


var esut = require('easy_util');
var dateUtil = esut.dateUtil;

var util = require('mcp_util');
var dateMathUtil = util.dateMathUtil;


var CalculateService = function () {
};

/**
 * 按天计算利息
 * @param days
 * @param rate
 * @param investMoney
 * @returns {number}
 */
CalculateService.prototype.daysCal = function (days, rate, investMoney) {
    //利息*投资金额/整年天数   其中利息先转为整数，最后再除以
    return Math.round(rate * 100 * investMoney / calCons.year_days_num * days / 100);
};


/**
 * 计算每月利息
 * @param rate
 * @param investMoney
 * @returns {number}
 */
CalculateService.prototype.monthCal = function (rate, investMoney) {
    //金额*利率/12==一个月的利息
    return Math.round(rate * 100 * investMoney / 12 / 100);
};

/**
 * 等额本息，计算每月还款额
 * @param rate
 * @param investMoney
 * @returns {number}
 */
CalculateService.prototype.deMonthSumCal = function (rate, investMoney, tempDeadline) {
    return Math.round((investMoney * (rate / 12) * Math.pow(
            (1 + rate / 12), tempDeadline))
        / (Math.pow((1 + rate / 12), tempDeadline) - 1), 2);
};

/**
 *  等额本息，计算每月利息
 * @param rate
 * @param investMoney
 * @param everyMonthRepayMoney
 * @param i
 * @returns {number}
 */
CalculateService.prototype.deMonthInterestCal = function (rate, investMoney, everyMonthRepayMoney,i) {
    return Math
        .round((investMoney * (rate / 12) - everyMonthRepayMoney) * Math.pow((1 + (rate / 12)), i-1) + everyMonthRepayMoney);
};


CalculateService.prototype.jt = function (investObj, raise_time) {
    var self = this;
    var jtRate;
    if (investObj.st_rate != undefined) {
        jtRate = investObj.st_rate;
    } else {
        jtRate = investObj.rate;
    }
    var days = 0;
    if (raise_time == undefined) {
        days = dateMathUtil.daysBetween(dateUtil.getCurTime(true), dateUtil.transFormat(investObj.create_time));
    } else {
        days = dateMathUtil.daysBetween(dateUtil.transFormat(raise_time), dateUtil.transFormat(investObj.create_time));
    }
    return self.daysCal(days, jtRate, investObj.money);

};


var calculateService = new CalculateService();
module.exports = calculateService;