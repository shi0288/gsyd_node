/**
 * Created by shiqm on 16-4-22.
 */
'use strict';

var async = require('async');
var service = require('mcp_service');
var calculateService = service.calculateService;

var cons = require('mcp_constants');
var calCons = cons.calculateCons;

var esut = require('easy_util');
var dateUtil = esut.dateUtil;

var util = require('mcp_util');
var dateMathUtil = util.dateMathUtil;

var dc = require('mcp_db').dc;


var DebxEngine = function () {
    var self = this;
};


/**
 * point 0  放款后升息
 * point 1  即投即生息
 * @param loanObj
 * @param repayTypeObj
 * @param cb
 */
DebxEngine.prototype.start = function (loanObj, repayTypeObj, cb) {
    var self = this;
    if (repayTypeObj.point == 0) {
        self.pt(loanObj, repayTypeObj, false, cb);
    } else if (repayTypeObj.point == 1) {
        self.pt(loanObj, repayTypeObj, true, cb);
    } else {
        cb('不支持的计息节点');
    }
};

DebxEngine.prototype.pt = function (loanObj, repayTypeObj, jt, cb) {
    var investTab = dc.main.get('invest');
    var cursor = investTab.find({loan_id: loanObj.id}, {}, []).sort({create_time: 1});
    cursor.dateToString();
    cursor.count(function (err, count) {
        var startNum = 0;
        var i = 0;
        //还款日期
        var repay_day = dateMathUtil.dateAdd('d', loanObj.accrue_time, loanObj.deadline);
        var loanRepayObjArr = new Array(loanObj.deadline);
        console.log("投资数量:" + count);
        async.whilst(
            function () {
                return count > 0;
            },
            function (whileCb) {
                console.log("计算中...");
                cursor.limit(startNum, calCons.split_num);
                cursor.toArray(function (err, data) {
                    var invest_repayTab = dc.main.get('invest_repay');
                    async.eachSeries(data, function (investObj, callback) {
                        var _index = 0;
                        var invest_interest = 0;
                        var invest_st_interest = 0;
                        var tempMoney = 0;
                        var everyMonthRepayMoney = calculateService.deMonthSumCal(loanObj.rate, investObj.money, loanObj.deadline);
                        async.eachSeries(loanRepayObjArr, function (obj, repayCall) {
                            var period = _index + 1;
                            if (loanRepayObjArr[_index] == undefined) {
                                loanRepayObjArr[_index] = {};
                                loanRepayObjArr[_index].id = loanObj.id + '_' + period;
                                loanRepayObjArr[_index].money = 0; //-----需叠加
                                loanRepayObjArr[_index].interest = 0;//-----需叠加
                                loanRepayObjArr[_index].repay_day = dateMathUtil.dateAdd('m', loanObj.accrue_time, period);
                                loanRepayObjArr[_index].loan_id = loanObj.id;
                                loanRepayObjArr[_index].st_interest = 0;//-----需叠加
                                //loanRepayObjArr[_index].create_time = dateUtil.getCurTime(); //保存时记录
                                loanRepayObjArr[_index].period = period;
                                loanRepayObjArr[_index].all_period = loanObj.deadline;
                                loanRepayObjArr[_index].status = 0;//0为还款  1已还
                            }
                            //计算利息
                            var interest = calculateService.deMonthInterestCal(loanObj.rate, investObj.money, everyMonthRepayMoney, period);
                            //计算利息
                            var money = everyMonthRepayMoney - interest;
                            tempMoney += money;
                            if (period == loanObj.deadline) {
                                money = money + (investObj.money - tempMoney);
                            }
                            //即投计算
                            var st_interest = 0;
                            if (jt && period == 1) {
                                st_interest = calculateService.jt(investObj, loanObj.raise_time);
                            }
                            var cond = {};
                            cond.id = investObj.id + '_' + period;
                            cond.money = money;
                            cond.interest = interest;
                            cond.repay_day = loanRepayObjArr[_index].repay_day;
                            cond.invest_id = investObj.id;
                            cond.st_interest = st_interest;
                            cond.create_time = dateUtil.getCurTime();
                            cond.period = period;
                            cond.all_period = loanObj.deadline;
                            cond.status = 0; //0为还款  1已还
                            //叠加借款人还款记录
                            loanRepayObjArr[_index].money += cond.money;
                            loanRepayObjArr[_index].interest += cond.interest;
                            loanRepayObjArr[_index].st_interest += cond.st_interest;
                            //当前投资人投资记录
                            invest_interest += interest;
                            invest_st_interest += st_interest;
                            _index++;
                            invest_repayTab.save(cond, [], function (err) {
                                repayCall();
                            });
                        }, function (err) {
                            investTab.update({id: investObj.id}, {
                                $set: {
                                    interest: invest_interest,
                                    st_interest: invest_st_interest
                                }
                            }, [], function (err) {
                                callback();
                            })
                        });
                    }, function (err) {
                        i++;
                        startNum = i * calCons.split_num;
                        count -= calCons.split_num;
                        whileCb();
                    });
                });
            },
            function (err) {
                if (!err) {
                    //todo 保存借款人还款记录
                    var loan_repayTab = dc.main.get('loan_repay');
                    async.eachSeries(loanRepayObjArr, function (loanRepayObj, loanRepayCall) {
                        loanRepayObj.create_time = dateUtil.getCurTime(); //保存时记录
                        loan_repayTab.save(loanRepayObj, [], function (err) {
                            loanRepayCall();
                        });
                    }, function (err) {
                        cb(true);
                    });
                } else {
                    cb(false);
                }
            }
        );
    });
};


var debxEngine = new DebxEngine();
module.exports = debxEngine;